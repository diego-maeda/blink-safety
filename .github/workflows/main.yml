name: Deploy

# Trigger the workflow on push and
# pull request events on the production branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Authenticate to the server via ssh
# and run our deployment script
jobs:
  create-deployment-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure PHP 8.2
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.2
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml

      - name: Install Composer dependencies
        run: composer install --no-dev --no-interaction --prefer-dist

      - name: Compile CSS and Javascript
        run: |
          npm install
          npm run build

      - name: Create deployment artifact
        env:
          GITHUB_SHA: ${{github.sha}}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules *

      - name: Store artifact for distribution
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz
  prepare-release-on-server:
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: app-build

      - name: Copy files through SSH
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          source: ${{github.sha}}.tar.gz
          target: /home/blink-safety/artifacts

      - name: Extract files and create directories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha}}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          envs: GITHUB_SHA
          script: |
            mkdir -p "/home/blink-safety/releases/${{GITHUB_SHA}}"
            tar xzf "/home/blink-safety/artifacts/${{GITHUB_SHA}}.tar.gz" -C "/home/blink-safety/releases/${{GITHUB_SHA}}"






